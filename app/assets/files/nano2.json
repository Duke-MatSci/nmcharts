{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "description": "Example plot of NanoMine data.",
    "background": "white",
    "padding": 5,
    "width": 360,
    "data": [
      {"name": "selectfillermatls_store"},
      {"name": "mybrush_store"},
      {
        "name": "source_0",
        "url": "NanoMine_VirtualIssue_ALL.json",
        "format": {"type": "json"},
        "transform": [
          {"type": "filter", "expr": "datum.Conductivity > 0"},
          {"type": "filter", "expr": "datum.Filler != null"},
          {
            "type": "formula",
            "expr": "log(datum.Conductivity)/log(10)",
            "as": "logCond"
          },
          {
            "type": "extent",
            "field": "logCond",
            "signal": "bin_step_1_logCond_extent"
          },
          {
            "type": "bin",
            "field": "logCond",
            "as": ["bin_logCond", "bin_logCond_end"],
            "signal": "bin_step_1_logCond_bins",
            "extent": {"signal": "bin_step_1_logCond_extent"},
            "step": 1
          },
          {"type": "formula", "expr": "pow(10, datum.bin_logCond)", "as": "x1"},
          {
            "type": "formula",
            "expr": "pow(10, datum.bin_logCond_end)",
            "as": "x2"
          }
        ]
      },
      {
        "name": "data_0",
        "source": "source_0",
        "transform": [
          {
            "type": "aggregate",
            "groupby": ["x1", "x2", "Filler"],
            "ops": ["count"],
            "fields": [null],
            "as": ["__count"]
          },
          {
            "type": "stack",
            "groupby": ["x1"],
            "field": "__count",
            "sort": {"field": ["Filler"], "order": ["descending"]},
            "as": ["__count_start", "__count_end"],
            "offset": "zero"
          },
          {
            "type": "filter",
            "expr": "isValid(datum[\"x1\"]) && isFinite(+datum[\"x1\"])"
          }
        ]
      },
      {
        "name": "data_1",
        "source": "source_0",
        "transform": [
          {
            "type": "filter",
            "expr": "isValid(datum[\"Conductivity\"]) && isFinite(+datum[\"Conductivity\"]) && isValid(datum[\"Loading_mass\"]) && isFinite(+datum[\"Loading_mass\"])"
          }
        ]
      },
      {
        "name": "data_2",
        "source": "source_0",
        "transform": [
          {
            "type": "filter",
            "expr": "isValid(datum[\"Conductivity\"]) && isFinite(+datum[\"Conductivity\"]) && isValid(datum[\"Loading_vol\"]) && isFinite(+datum[\"Loading_vol\"])"
          }
        ]
      }
    ],
    "signals": [
      {"name": "concat_0_height", "value": 270},
      {"name": "concat_1_height", "value": 220},
      {
        "name": "unit",
        "value": {},
        "on": [
          {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
        ]
      },
      {
        "name": "selectfillermatls_Filler_legend",
        "value": null,
        "on": [
          {
            "events": [
              {
                "source": "view",
                "type": "click",
                "markname": "Filler_legend_symbols"
              },
              {
                "source": "view",
                "type": "click",
                "markname": "Filler_legend_labels"
              },
              {
                "source": "view",
                "type": "click",
                "markname": "Filler_legend_entries"
              }
            ],
            "update": "datum.value || item().items[0].items[0].datum.value",
            "force": true
          },
          {
            "events": [{"source": "view", "type": "click"}],
            "update": "!event.item || !datum ? null : selectfillermatls_Filler_legend",
            "force": true
          }
        ]
      },
      {
        "name": "selectfillermatls",
        "update": "vlSelectionResolve(\"selectfillermatls_store\", \"union\", true)"
      },
      {
        "name": "mybrush",
        "update": "vlSelectionResolve(\"mybrush_store\", \"union\")"
      }
    ],
    "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "each"},
    "marks": [
      {
        "type": "group",
        "name": "concat_0_group",
        "style": "cell",
        "encode": {
          "update": {
            "width": {"signal": "width"},
            "height": {"signal": "concat_0_height"}
          }
        },
        "signals": [
          {
            "name": "selectfillermatls_tuple",
            "update": "selectfillermatls_Filler_legend !== null ? {fields: selectfillermatls_tuple_fields, values: [selectfillermatls_Filler_legend]} : null"
          },
          {
            "name": "selectfillermatls_tuple_fields",
            "value": [{"type": "E", "field": "Filler"}]
          },
          {
            "name": "selectfillermatls_toggle",
            "value": false,
            "on": [
              {
                "events": {"merge": [{"source": "view", "type": "click"}]},
                "update": "event.shiftKey"
              }
            ]
          },
          {
            "name": "selectfillermatls_modify",
            "on": [
              {
                "events": {"signal": "selectfillermatls_tuple"},
                "update": "modify(\"selectfillermatls_store\", selectfillermatls_toggle ? null : selectfillermatls_tuple, selectfillermatls_toggle ? null : true, selectfillermatls_toggle ? selectfillermatls_tuple : null)"
              }
            ]
          },
          {
            "name": "mybrush_x",
            "value": [],
            "on": [
              {
                "events": {
                  "source": "scope",
                  "type": "mousedown",
                  "filter": [
                    "!event.item || event.item.mark.name !== \"mybrush_brush\""
                  ]
                },
                "update": "[x(unit), x(unit)]"
              },
              {
                "events": {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "filter": [
                        "!event.item || event.item.mark.name !== \"mybrush_brush\""
                      ]
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                },
                "update": "[mybrush_x[0], clamp(x(unit), 0, width)]"
              },
              {
                "events": {"signal": "mybrush_scale_trigger"},
                "update": "[scale(\"concat_0_x\", mybrush_x1[0]), scale(\"concat_0_x\", mybrush_x1[1])]"
              },
              {
                "events": {"signal": "mybrush_translate_delta"},
                "update": "clampRange(panLinear(mybrush_translate_anchor.extent_x, mybrush_translate_delta.x / span(mybrush_translate_anchor.extent_x)), 0, width)"
              },
              {
                "events": {"signal": "mybrush_zoom_delta"},
                "update": "clampRange(zoomLinear(mybrush_x, mybrush_zoom_anchor.x, mybrush_zoom_delta), 0, width)"
              },
              {
                "events": [{"source": "scope", "type": "dblclick"}],
                "update": "[0, 0]"
              }
            ]
          },
          {
            "name": "mybrush_x1",
            "on": [
              {
                "events": {"signal": "mybrush_x"},
                "update": "mybrush_x[0] === mybrush_x[1] ? null : invert(\"concat_0_x\", mybrush_x)"
              }
            ]
          },
          {
            "name": "mybrush_scale_trigger",
            "value": {},
            "on": [
              {
                "events": [{"scale": "concat_0_x"}],
                "update": "(!isArray(mybrush_x1) || (+invert(\"concat_0_x\", mybrush_x)[0] === +mybrush_x1[0] && +invert(\"concat_0_x\", mybrush_x)[1] === +mybrush_x1[1])) ? mybrush_scale_trigger : {}"
              }
            ]
          },
          {
            "name": "mybrush_tuple",
            "on": [
              {
                "events": [{"signal": "mybrush_x1"}],
                "update": "mybrush_x1 ? {unit: \"concat_0\", fields: mybrush_tuple_fields, values: [mybrush_x1]} : null"
              }
            ]
          },
          {
            "name": "mybrush_tuple_fields",
            "value": [{"field": "x1", "channel": "x", "type": "R"}]
          },
          {
            "name": "mybrush_translate_anchor",
            "value": {},
            "on": [
              {
                "events": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "markname": "mybrush_brush"
                  }
                ],
                "update": "{x: x(unit), y: y(unit), extent_x: slice(mybrush_x)}"
              }
            ]
          },
          {
            "name": "mybrush_translate_delta",
            "value": {},
            "on": [
              {
                "events": [
                  {
                    "source": "window",
                    "type": "mousemove",
                    "consume": true,
                    "between": [
                      {
                        "source": "scope",
                        "type": "mousedown",
                        "markname": "mybrush_brush"
                      },
                      {"source": "window", "type": "mouseup"}
                    ]
                  }
                ],
                "update": "{x: mybrush_translate_anchor.x - x(unit), y: mybrush_translate_anchor.y - y(unit)}"
              }
            ]
          },
          {
            "name": "mybrush_zoom_anchor",
            "on": [
              {
                "events": [
                  {
                    "source": "scope",
                    "type": "wheel",
                    "consume": true,
                    "markname": "mybrush_brush"
                  }
                ],
                "update": "{x: x(unit), y: y(unit)}"
              }
            ]
          },
          {
            "name": "mybrush_zoom_delta",
            "on": [
              {
                "events": [
                  {
                    "source": "scope",
                    "type": "wheel",
                    "consume": true,
                    "markname": "mybrush_brush"
                  }
                ],
                "force": true,
                "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
              }
            ]
          },
          {
            "name": "mybrush_modify",
            "on": [
              {
                "events": {"signal": "mybrush_tuple"},
                "update": "modify(\"mybrush_store\", mybrush_tuple, true)"
              }
            ]
          }
        ],
        "marks": [
          {
            "name": "mybrush_brush_bg",
            "type": "rect",
            "clip": true,
            "encode": {
              "enter": {
                "fill": {"value": "#333"},
                "fillOpacity": {"value": 0.125}
              },
              "update": {
                "x": [
                  {
                    "test": "data(\"mybrush_store\").length && data(\"mybrush_store\")[0].unit === \"concat_0\"",
                    "signal": "mybrush_x[0]"
                  },
                  {"value": 0}
                ],
                "y": [
                  {
                    "test": "data(\"mybrush_store\").length && data(\"mybrush_store\")[0].unit === \"concat_0\"",
                    "value": 0
                  },
                  {"value": 0}
                ],
                "x2": [
                  {
                    "test": "data(\"mybrush_store\").length && data(\"mybrush_store\")[0].unit === \"concat_0\"",
                    "signal": "mybrush_x[1]"
                  },
                  {"value": 0}
                ],
                "y2": [
                  {
                    "test": "data(\"mybrush_store\").length && data(\"mybrush_store\")[0].unit === \"concat_0\"",
                    "field": {"group": "height"}
                  },
                  {"value": 0}
                ]
              }
            }
          },
          {
            "name": "concat_0_marks",
            "type": "rect",
            "style": ["bar"],
            "interactive": true,
            "from": {"data": "data_0"},
            "encode": {
              "update": {
                "fill": {"scale": "color", "field": "Filler"},
                "opacity": [
                  {
                    "test": "!(length(data(\"selectfillermatls_store\"))) || (vlSelectionTest(\"selectfillermatls_store\", datum))",
                    "value": 0.95
                  },
                  {"value": 0.05}
                ],
                "x": {"scale": "concat_0_x", "field": "x1"},
                "x2": {"scale": "concat_0_x", "field": "x2"},
                "y": {"scale": "concat_0_y", "field": "__count_end"},
                "y2": {"scale": "concat_0_y", "field": "__count_start"}
              }
            }
          },
          {
            "name": "mybrush_brush",
            "type": "rect",
            "clip": true,
            "encode": {
              "enter": {"fill": {"value": "transparent"}},
              "update": {
                "x": [
                  {
                    "test": "data(\"mybrush_store\").length && data(\"mybrush_store\")[0].unit === \"concat_0\"",
                    "signal": "mybrush_x[0]"
                  },
                  {"value": 0}
                ],
                "y": [
                  {
                    "test": "data(\"mybrush_store\").length && data(\"mybrush_store\")[0].unit === \"concat_0\"",
                    "value": 0
                  },
                  {"value": 0}
                ],
                "x2": [
                  {
                    "test": "data(\"mybrush_store\").length && data(\"mybrush_store\")[0].unit === \"concat_0\"",
                    "signal": "mybrush_x[1]"
                  },
                  {"value": 0}
                ],
                "y2": [
                  {
                    "test": "data(\"mybrush_store\").length && data(\"mybrush_store\")[0].unit === \"concat_0\"",
                    "field": {"group": "height"}
                  },
                  {"value": 0}
                ],
                "stroke": [
                  {"test": "mybrush_x[0] !== mybrush_x[1]", "value": "white"},
                  {"value": null}
                ]
              }
            }
          }
        ],
        "axes": [
          {
            "scale": "concat_0_x",
            "orient": "bottom",
            "tickCount": 5,
            "gridScale": "concat_0_y",
            "grid": true,
            "domain": false,
            "labels": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "concat_0_y",
            "orient": "left",
            "gridScale": "concat_0_x",
            "grid": true,
            "tickCount": {"signal": "ceil(concat_0_height/40)"},
            "domain": false,
            "labels": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "concat_0_x",
            "orient": "bottom",
            "grid": false,
            "title": "Electrical Conductivity (S/m)",
            "labelFontSize": 16,
            "tickCount": 5,
            "titleFontSize": 16,
            "labelFlush": true,
            "labelOverlap": "greedy",
            "zindex": 0
          },
          {
            "scale": "concat_0_y",
            "orient": "left",
            "grid": false,
            "title": "Number of Samples",
            "labelFontSize": 16,
            "titleFontSize": 16,
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(concat_0_height/40)"},
            "zindex": 0
          }
        ]
      },
      {
        "type": "group",
        "name": "concat_1_group",
        "style": "cell",
        "encode": {
          "update": {
            "width": {"signal": "width"},
            "height": {"signal": "concat_1_height"}
          }
        },
        "marks": [
          {
            "name": "concat_1_layer_0_marks",
            "type": "symbol",
            "clip": true,
            "style": ["point"],
            "interactive": false,
            "from": {"data": "data_1"},
            "encode": {
              "update": {
                "opacity": [
                  {
                    "test": "!(length(data(\"selectfillermatls_store\"))) || (vlSelectionTest(\"selectfillermatls_store\", datum))",
                    "value": 0.8
                  },
                  {"value": 0.01}
                ],
                "size": {"value": 300},
                "shape": {"value": "triangle-left"},
                "fill": {"scale": "color", "field": "Filler"},
                "x": {"scale": "concat_1_x", "field": "Conductivity"},
                "y": {"scale": "concat_1_layer_0_y", "field": "Loading_mass"}
              }
            }
          },
          {
            "name": "concat_1_layer_1_marks",
            "type": "symbol",
            "clip": true,
            "style": ["point"],
            "interactive": false,
            "from": {"data": "data_2"},
            "encode": {
              "update": {
                "opacity": [
                  {
                    "test": "!(length(data(\"selectfillermatls_store\"))) || (vlSelectionTest(\"selectfillermatls_store\", datum))",
                    "value": 0.8
                  },
                  {"value": 0.01}
                ],
                "size": {"value": 300},
                "shape": {"value": "triangle-right"},
                "fill": {"scale": "color", "field": "Filler"},
                "x": {"scale": "concat_1_x", "field": "Conductivity"},
                "y": {"scale": "concat_1_layer_1_y", "field": "Loading_vol"}
              }
            }
          }
        ],
        "axes": [
          {
            "scale": "concat_1_x",
            "orient": "bottom",
            "tickCount": 5,
            "gridScale": "concat_1_layer_0_y",
            "grid": true,
            "domain": false,
            "labels": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "concat_1_x",
            "orient": "bottom",
            "grid": false,
            "title": "Electrical Conductivity (S/m)",
            "labelFontSize": 16,
            "tickCount": 5,
            "titleFontSize": 16,
            "labelFlush": true,
            "labelOverlap": "greedy",
            "zindex": 0
          },
          {
            "scale": "concat_1_layer_0_y",
            "orient": "left",
            "grid": false,
            "title": "Loading (mass fraction)",
            "labelFontSize": 16,
            "titleFontSize": 16,
            "labelOverlap": "greedy",
            "zindex": 0
          },
          {
            "scale": "concat_1_layer_1_y",
            "orient": "right",
            "grid": false,
            "title": "Loading (volume fraction)",
            "labelFontSize": 16,
            "titleFontSize": 16,
            "labelOverlap": "greedy",
            "zindex": 0
          }
        ]
      }
    ],
    "scales": [
      {
        "name": "color",
        "type": "ordinal",
        "domain": {
          "fields": [
            {"data": "data_0", "field": "Filler"},
            {"data": "data_1", "field": "Filler"},
            {"data": "data_2", "field": "Filler"}
          ],
          "sort": true
        },
        "range": "category"
      },
      {
        "name": "concat_0_x",
        "type": "log",
        "domain": {"data": "data_0", "fields": ["x1", "x2"]},
        "range": [0, {"signal": "width"}],
        "nice": true,
        "padding": 5
      },
      {
        "name": "concat_0_y",
        "type": "linear",
        "domain": {"data": "data_0", "fields": ["__count_start", "__count_end"]},
        "range": [{"signal": "concat_0_height"}, 0],
        "nice": true,
        "zero": true
      },
      {
        "name": "concat_1_x",
        "type": "log",
        "domain": {
          "fields": [
            {"data": "data_1", "field": "Conductivity"},
            {"data": "data_2", "field": "Conductivity"}
          ]
        },
        "domainRaw": {"signal": "mybrush[\"x1\"]"},
        "range": [0, {"signal": "width"}],
        "nice": true
      },
      {
        "name": "concat_1_layer_0_y",
        "type": "log",
        "domain": {"data": "data_1", "field": "Loading_mass"},
        "range": [{"signal": "concat_1_height"}, 0],
        "nice": true
      },
      {
        "name": "concat_1_layer_1_y",
        "type": "log",
        "domain": {"data": "data_2", "field": "Loading_vol"},
        "range": [{"signal": "concat_1_height"}, 0],
        "nice": true
      }
    ],
    "legends": [
      {
        "title": "Filler Type",
        "titleFontSize": 16,
        "fill": "color",
        "symbolType": "square",
        "encode": {
          "labels": {
            "name": "Filler_legend_labels",
            "interactive": true,
            "update": {
              "opacity": [
                {
                  "test": "(!length(data(\"selectfillermatls_store\")) || (selectfillermatls[\"Filler\"] && indexof(selectfillermatls[\"Filler\"], datum.value) >= 0))",
                  "value": 1
                },
                {"value": 0.35}
              ]
            }
          },
          "symbols": {
            "name": "Filler_legend_symbols",
            "interactive": true,
            "update": {
              "opacity": [
                {
                  "test": "(!length(data(\"selectfillermatls_store\")) || (selectfillermatls[\"Filler\"] && indexof(selectfillermatls[\"Filler\"], datum.value) >= 0))",
                  "value": 0.95
                },
                {"value": 0.35}
              ]
            }
          },
          "entries": {
            "name": "Filler_legend_entries",
            "interactive": true,
            "update": {"fill": {"value": "transparent"}}
          }
        }
      }
    ]
  }